// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SceneSkope.PowerBI
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Admin.
    /// </summary>
    public static partial class AdminExtensions
    {
            /// <summary>
            /// Adds an encryption key for Power BI workspaces assigned to a capacity.
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;This API allows 600 requests per hour at maximum.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='tenantKeyCreationRequest'>
            /// Tenant key information
            /// </param>
            public static TenantKey AddPowerBIEncryptionKey(this IAdmin operations, TenantKeyCreationRequest tenantKeyCreationRequest)
            {
                return operations.AddPowerBIEncryptionKeyAsync(tenantKeyCreationRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Adds an encryption key for Power BI workspaces assigned to a capacity.
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;This API allows 600 requests per hour at maximum.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='tenantKeyCreationRequest'>
            /// Tenant key information
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TenantKey> AddPowerBIEncryptionKeyAsync(this IAdmin operations, TenantKeyCreationRequest tenantKeyCreationRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddPowerBIEncryptionKeyWithHttpMessagesAsync(tenantKeyCreationRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns the encryption keys for the tenant.
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static TenantKeys GetPowerBIEncryptionKeys(this IAdmin operations)
            {
                return operations.GetPowerBIEncryptionKeysAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns the encryption keys for the tenant.
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TenantKeys> GetPowerBIEncryptionKeysAsync(this IAdmin operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetPowerBIEncryptionKeysWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Rotate the encryption key for Power BI workspaces assigned to a capacity.
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;This API allows 600 requests per hour at maximum.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='tenantKeyId'>
            /// Tenant key id
            /// </param>
            /// <param name='tenantKeyRotationRequest'>
            /// Tenant key information
            /// </param>
            public static TenantKey RotatePowerBIEncryptionKey(this IAdmin operations, System.Guid tenantKeyId, TenantKeyRotationRequest tenantKeyRotationRequest)
            {
                return operations.RotatePowerBIEncryptionKeyAsync(tenantKeyId, tenantKeyRotationRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Rotate the encryption key for Power BI workspaces assigned to a capacity.
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;This API allows 600 requests per hour at maximum.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='tenantKeyId'>
            /// Tenant key id
            /// </param>
            /// <param name='tenantKeyRotationRequest'>
            /// Tenant key information
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TenantKey> RotatePowerBIEncryptionKeyAsync(this IAdmin operations, System.Guid tenantKeyId, TenantKeyRotationRequest tenantKeyRotationRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RotatePowerBIEncryptionKeyWithHttpMessagesAsync(tenantKeyId, tenantKeyRotationRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Returns a list of capacities for the organization.
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='expand'>
            /// Expands related entities inline
            /// </param>
            public static Capacities GetCapacitiesAsAdmin(this IAdmin operations, string expand = default(string))
            {
                return operations.GetCapacitiesAsAdminAsync(expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a list of capacities for the organization.
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='expand'>
            /// Expands related entities inline
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Capacities> GetCapacitiesAsAdminAsync(this IAdmin operations, string expand = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetCapacitiesAsAdminWithHttpMessagesAsync(expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Changes the specific capacity information. Currently, only supports
            /// changing the capacity encryption key
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='capacityId'>
            /// The capacity Id
            /// </param>
            /// <param name='capacityPatchRequest'>
            /// Patch capacity information
            /// </param>
            public static void PatchCapacityAsAdmin(this IAdmin operations, System.Guid capacityId, CapacityPatchRequest capacityPatchRequest)
            {
                operations.PatchCapacityAsAdminAsync(capacityId, capacityPatchRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Changes the specific capacity information. Currently, only supports
            /// changing the capacity encryption key
            /// </summary>
            /// <remarks>
            /// **Note:** The user must have administrator rights (such as Office 365
            /// Global Administrator or Power BI Service Administrator) to call this API.
            /// &lt;br/&gt;&lt;br/&gt;**Required scope**: Tenant.Read.All or
            /// Tenant.ReadWrite.All&lt;br/&gt;To set the permissions scope, see [Register
            /// an app](https://docs.microsoft.com/power-bi/developer/register-app).
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='capacityId'>
            /// The capacity Id
            /// </param>
            /// <param name='capacityPatchRequest'>
            /// Patch capacity information
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task PatchCapacityAsAdminAsync(this IAdmin operations, System.Guid capacityId, CapacityPatchRequest capacityPatchRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.PatchCapacityAsAdminWithHttpMessagesAsync(capacityId, capacityPatchRequest, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
