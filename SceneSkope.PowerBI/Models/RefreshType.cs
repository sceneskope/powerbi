// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SceneSkope.PowerBI.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for RefreshType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum RefreshType
    {
        /// <summary>
        /// Refresh was triggered by the dataset refresh schedule setting
        /// </summary>
        [EnumMember(Value = "Scheduled")]
        Scheduled,
        /// <summary>
        /// Refresh was triggered interactively threw Power BI portal
        /// </summary>
        [EnumMember(Value = "OnDemand")]
        OnDemand,
        /// <summary>
        /// Refresh was triggered by an Api call
        /// </summary>
        [EnumMember(Value = "ViaApi")]
        ViaApi
    }
    internal static class RefreshTypeEnumExtension
    {
        internal static string ToSerializedValue(this RefreshType? value)
        {
            return value == null ? null : ((RefreshType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this RefreshType value)
        {
            switch( value )
            {
                case RefreshType.Scheduled:
                    return "Scheduled";
                case RefreshType.OnDemand:
                    return "OnDemand";
                case RefreshType.ViaApi:
                    return "ViaApi";
            }
            return null;
        }

        internal static RefreshType? ParseRefreshType(this string value)
        {
            switch( value )
            {
                case "Scheduled":
                    return RefreshType.Scheduled;
                case "OnDemand":
                    return RefreshType.OnDemand;
                case "ViaApi":
                    return RefreshType.ViaApi;
            }
            return null;
        }
    }
}
