// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SceneSkope.PowerBI.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for FeatureExtendedState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum FeatureExtendedState
    {
        [EnumMember(Value = "Enabled")]
        Enabled,
        [EnumMember(Value = "DisabledByAdmin")]
        DisabledByAdmin,
        [EnumMember(Value = "UserNotLicensed")]
        UserNotLicensed
    }
    internal static class FeatureExtendedStateEnumExtension
    {
        internal static string ToSerializedValue(this FeatureExtendedState? value)
        {
            return value == null ? null : ((FeatureExtendedState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this FeatureExtendedState value)
        {
            switch( value )
            {
                case FeatureExtendedState.Enabled:
                    return "Enabled";
                case FeatureExtendedState.DisabledByAdmin:
                    return "DisabledByAdmin";
                case FeatureExtendedState.UserNotLicensed:
                    return "UserNotLicensed";
            }
            return null;
        }

        internal static FeatureExtendedState? ParseFeatureExtendedState(this string value)
        {
            switch( value )
            {
                case "Enabled":
                    return FeatureExtendedState.Enabled;
                case "DisabledByAdmin":
                    return FeatureExtendedState.DisabledByAdmin;
                case "UserNotLicensed":
                    return FeatureExtendedState.UserNotLicensed;
            }
            return null;
        }
    }
}
