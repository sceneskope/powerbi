// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SceneSkope.PowerBI.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for PrivacyLevel.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PrivacyLevel
    {
        [EnumMember(Value = "None")]
        None,
        [EnumMember(Value = "Public")]
        Public,
        [EnumMember(Value = "Organizational")]
        Organizational,
        [EnumMember(Value = "Private")]
        Private
    }
    internal static class PrivacyLevelEnumExtension
    {
        internal static string ToSerializedValue(this PrivacyLevel? value)
        {
            return value == null ? null : ((PrivacyLevel)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this PrivacyLevel value)
        {
            switch( value )
            {
                case PrivacyLevel.None:
                    return "None";
                case PrivacyLevel.Public:
                    return "Public";
                case PrivacyLevel.Organizational:
                    return "Organizational";
                case PrivacyLevel.Private:
                    return "Private";
            }
            return null;
        }

        internal static PrivacyLevel? ParsePrivacyLevel(this string value)
        {
            switch( value )
            {
                case "None":
                    return PrivacyLevel.None;
                case "Public":
                    return PrivacyLevel.Public;
                case "Organizational":
                    return PrivacyLevel.Organizational;
                case "Private":
                    return PrivacyLevel.Private;
            }
            return null;
        }
    }
}
