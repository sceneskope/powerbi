// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SceneSkope.PowerBI.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Power BI dataset parameter
    /// </summary>
    public partial class MashupParameter
    {
        /// <summary>
        /// Initializes a new instance of the MashupParameter class.
        /// </summary>
        public MashupParameter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MashupParameter class.
        /// </summary>
        /// <param name="name">The parameter name</param>
        /// <param name="type">The parameter type</param>
        /// <param name="isRequired">Is dataset parameter required</param>
        /// <param name="currentValue">The parameter current value</param>
        public MashupParameter(string name, string type, bool isRequired, string currentValue = default(string))
        {
            Name = name;
            Type = type;
            CurrentValue = currentValue;
            IsRequired = isRequired;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the parameter name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the parameter type
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets the parameter current value
        /// </summary>
        [JsonProperty(PropertyName = "currentValue")]
        public string CurrentValue { get; set; }

        /// <summary>
        /// Gets or sets is dataset parameter required
        /// </summary>
        [JsonProperty(PropertyName = "isRequired")]
        public bool IsRequired { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
        }
    }
}
