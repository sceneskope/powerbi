// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SceneSkope.PowerBI.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A Power BI user access right entry for datasource
    /// </summary>
    public partial class DatasourceUser
    {
        /// <summary>
        /// Initializes a new instance of the DatasourceUser class.
        /// </summary>
        public DatasourceUser()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatasourceUser class.
        /// </summary>
        /// <param name="datasourceAccessRight">The user access rights for the
        /// datasource. Possible values include: 'None', 'Read',
        /// 'ReadOverrideEffectiveIdentity'</param>
        /// <param name="emailAddress">Email address of the user</param>
        /// <param name="displayName">Display name of the principal</param>
        /// <param name="identifier">Identifier of the principal</param>
        /// <param name="principalType">The principal type. Possible values
        /// include: 'User', 'Group', 'App'</param>
        public DatasourceUser(DatasourceUserAccessRight datasourceAccessRight, string emailAddress = default(string), string displayName = default(string), string identifier = default(string), PrincipalType? principalType = default(PrincipalType?))
        {
            DatasourceAccessRight = datasourceAccessRight;
            EmailAddress = emailAddress;
            DisplayName = displayName;
            Identifier = identifier;
            PrincipalType = principalType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the user access rights for the datasource. Possible
        /// values include: 'None', 'Read', 'ReadOverrideEffectiveIdentity'
        /// </summary>
        [JsonProperty(PropertyName = "datasourceAccessRight")]
        public DatasourceUserAccessRight DatasourceAccessRight { get; set; }

        /// <summary>
        /// Gets or sets email address of the user
        /// </summary>
        [JsonProperty(PropertyName = "emailAddress")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or sets display name of the principal
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets identifier of the principal
        /// </summary>
        [JsonProperty(PropertyName = "identifier")]
        public string Identifier { get; set; }

        /// <summary>
        /// Gets or sets the principal type. Possible values include: 'User',
        /// 'Group', 'App'
        /// </summary>
        [JsonProperty(PropertyName = "principalType")]
        public PrincipalType? PrincipalType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
