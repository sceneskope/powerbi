// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SceneSkope.PowerBI.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Power BI request to restore a deleted group
    /// </summary>
    public partial class GroupRestoreRequest
    {
        /// <summary>
        /// Initializes a new instance of the GroupRestoreRequest class.
        /// </summary>
        public GroupRestoreRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GroupRestoreRequest class.
        /// </summary>
        /// <param name="emailAddress">The email address of the owner of the
        /// group to be restored.</param>
        /// <param name="name">The name of the group to be restored.</param>
        public GroupRestoreRequest(string emailAddress, string name = default(string))
        {
            Name = name;
            EmailAddress = emailAddress;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the group to be restored.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the email address of the owner of the group to be
        /// restored.
        /// </summary>
        [JsonProperty(PropertyName = "emailAddress")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EmailAddress == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EmailAddress");
            }
        }
    }
}
